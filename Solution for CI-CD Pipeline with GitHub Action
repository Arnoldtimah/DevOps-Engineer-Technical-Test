# Trigger the workflow on push to the main branch
name: CI/CD Pipeline

on:
  push:
    branches: [main]

# Set environment variables using GitHub secrets
env:
  GCP_PROJECT: your-gcp-project-id
  GCR_REGISTRY: gcr.io/${{ env.GCP_PROJECT }}
  GCR_IMAGE: your-app-image-name
  GCR_TAG: ${{ github.sha }}
  CLOUD_RUN_SERVICE: your-cloud-run-service-name
  CLOUD_RUN_REGION: us-central1

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
# Check out the code repository
    - name: Checkout code
      uses: actions/checkout@v2

 # Build and push the Docker image
    - name: Set up Docker Buildx
      uses: docker-practice/actions-setup-docker@master

 # Build and push the Docker image
    - name: Build and push Docker image
      run: |
# Build the Docker image using the Dockerfile in the repository
        docker build -t $GCR_REGISTRY/$GCR_IMAGE:$GCR_TAG .

 # Push the Docker image to the container registry
        docker push $GCR_REGISTRY/$GCR_IMAGE:$GCR_TAG

# Deploy the application to Cloud Run
    - name: Deploy to Cloud Run
      run: |
        gcloud auth configure-docker
        gcloud run deploy $CLOUD_RUN_SERVICE \
          --region=$CLOUD_RUN_REGION \
          --image=$GCR_REGISTRY/$GCR_IMAGE:$GCR_TAG \
          --platform=managed \
          --allow-unauthenticated
          
    # Add unit/integration tests for PHP application (if applicable)
    - name: Run tests
      run: |
        # Add commands to run your tests
        
    # Configure environment variables using GitHub secrets
    - name: Set up environment variables
      env:
        DATABASE_USERNAME: ${{ secrets.DATABASE_DevOps }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_123456 }}
      run: |
        # Add commands to set up environment variables
        
    # Document the workflow
    - name: Document workflow
      run: |
